/**
 * Duke Data Service API.
 * REST API to the Duke Data Service. Some requests require Authentication.
 *
 * OpenAPI spec version: 0.0.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/PostApiV1Search'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/PostApiV1Search'));
  } else {
    // Browser globals (root is window)
    if (!root.DukeDataServiceApi) {
      root.DukeDataServiceApi = {};
    }
    root.DukeDataServiceApi.SearchApi = factory(root.DukeDataServiceApi.ApiClient, root.DukeDataServiceApi.PostApiV1Search);
  }
}(this, function(ApiClient, PostApiV1Search) {
  'use strict';

  /**
   * Search service.
   * @module api/SearchApi
   * @version 0.0.2
   */

  /**
   * Constructs a new SearchApi. 
   * @alias module:api/SearchApi
   * @class
   * @param {module:ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the postApiV1Search operation.
     * @callback module:api/SearchApi~postApiV1SearchCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Search Objects
     * Search Objects  Search for DDS objects using the elasticsearch query_dsl on supported kinds of objects
     * @param {module:model/PostApiV1Search} postApiV1Search 
     * @param {module:api/SearchApi~postApiV1SearchCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.postApiV1Search = function(postApiV1Search, callback) {
      var postBody = postApiV1Search;

      // verify the required parameter 'postApiV1Search' is set
      if (postApiV1Search == undefined || postApiV1Search == null) {
        throw "Missing the required parameter 'postApiV1Search' when calling postApiV1Search";
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/api/v1/search', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the postApiV1SearchProvenance operation.
     * @callback module:api/SearchApi~postApiV1SearchProvenanceCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Search Provenance
     * Search Provenance  Search Provenance related to a start_node by max_hops degrees of separation (default inifinite)
     * @param {String} startNodeKind The kind of start_node
     * @param {String} startNodeId The unique id of start_node
     * @param {Object} opts Optional parameters
     * @param {Integer} opts.maxHops Maximum number of degrees of seperation from start node (default infinite)
     * @param {module:api/SearchApi~postApiV1SearchProvenanceCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.postApiV1SearchProvenance = function(startNodeKind, startNodeId, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'startNodeKind' is set
      if (startNodeKind == undefined || startNodeKind == null) {
        throw "Missing the required parameter 'startNodeKind' when calling postApiV1SearchProvenance";
      }

      // verify the required parameter 'startNodeId' is set
      if (startNodeId == undefined || startNodeId == null) {
        throw "Missing the required parameter 'startNodeId' when calling postApiV1SearchProvenance";
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
        'start_node[kind]': startNodeKind,
        'start_node[id]': startNodeId,
        'max_hops': opts['maxHops']
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/api/v1/search/provenance', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the postApiV1SearchProvenanceOrigin operation.
     * @callback module:api/SearchApi~postApiV1SearchProvenanceOriginCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Search Provenance wasGeneratedBy
     * Search Provenance wasGeneratedBy  This is a targeted query that navigates \&quot;up\&quot; the provenance chain for a file version to see how it was generated (i.e. by what activity) and from what source file versions. Given a list of file versions, this action perform the following query for each file version: 1. Gets the generating activity. 2. For the generating activity, gets the list of wasGeneratedBy and used file versions. A graph structure of the unique nodes and relationships is returned.
     * @param {Array.<String>} fileVersionsId The unique file version id.
     * @param {module:api/SearchApi~postApiV1SearchProvenanceOriginCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.postApiV1SearchProvenanceOrigin = function(fileVersionsId, callback) {
      var postBody = null;

      // verify the required parameter 'fileVersionsId' is set
      if (fileVersionsId == undefined || fileVersionsId == null) {
        throw "Missing the required parameter 'fileVersionsId' when calling postApiV1SearchProvenanceOrigin";
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
        'file_versions[][id]': this.apiClient.buildCollectionParam(fileVersionsId, 'csv')
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/api/v1/search/provenance/origin', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
