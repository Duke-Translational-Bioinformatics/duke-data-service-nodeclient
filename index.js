/**
 * Duke Data Service API.
 * REST API to the Duke Data Service. Some requests require Authentication.
 *
 * OpenAPI spec version: 0.0.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/PostApiV1Search', 'api/ActivitiesApi', 'api/AppApi', 'api/AuthprovidersApi', 'api/AuthrolesApi', 'api/CurrentuserApi', 'api/FilesApi', 'api/FileversionsApi', 'api/FoldersApi', 'api/MetaApi', 'api/ProjectrolesApi', 'api/ProjectsApi', 'api/ProjecttransfersApi', 'api/RelationsApi', 'api/SearchApi', 'api/SoftwareagentsApi', 'api/StorageprovidersApi', 'api/SystemApi', 'api/TagsApi', 'api/TemplatepropertiesApi', 'api/TemplatesApi', 'api/UploadsApi', 'api/UserApi', 'api/UsersApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/PostApiV1Search'), require('./api/ActivitiesApi'), require('./api/AppApi'), require('./api/AuthprovidersApi'), require('./api/AuthrolesApi'), require('./api/CurrentuserApi'), require('./api/FilesApi'), require('./api/FileversionsApi'), require('./api/FoldersApi'), require('./api/MetaApi'), require('./api/ProjectrolesApi'), require('./api/ProjectsApi'), require('./api/ProjecttransfersApi'), require('./api/RelationsApi'), require('./api/SearchApi'), require('./api/SoftwareagentsApi'), require('./api/StorageprovidersApi'), require('./api/SystemApi'), require('./api/TagsApi'), require('./api/TemplatepropertiesApi'), require('./api/TemplatesApi'), require('./api/UploadsApi'), require('./api/UserApi'), require('./api/UsersApi'));
  }
}(function(ApiClient, PostApiV1Search, ActivitiesApi, AppApi, AuthprovidersApi, AuthrolesApi, CurrentuserApi, FilesApi, FileversionsApi, FoldersApi, MetaApi, ProjectrolesApi, ProjectsApi, ProjecttransfersApi, RelationsApi, SearchApi, SoftwareagentsApi, StorageprovidersApi, SystemApi, TagsApi, TemplatepropertiesApi, TemplatesApi, UploadsApi, UserApi, UsersApi) {
  'use strict';

  /**
   * REST_API_to_the_Duke_Data_Service__Some_requests_require_Authentication_.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var DukeDataServiceApi = require('index'); // See note below*.
   * var xxxSvc = new DukeDataServiceApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new DukeDataServiceApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new DukeDataServiceApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new DukeDataServiceApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 0.0.2
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The PostApiV1Search model constructor.
     * @property {module:model/PostApiV1Search}
     */
    PostApiV1Search: PostApiV1Search,
    /**
     * The ActivitiesApi service constructor.
     * @property {module:api/ActivitiesApi}
     */
    ActivitiesApi: ActivitiesApi,
    /**
     * The AppApi service constructor.
     * @property {module:api/AppApi}
     */
    AppApi: AppApi,
    /**
     * The AuthprovidersApi service constructor.
     * @property {module:api/AuthprovidersApi}
     */
    AuthprovidersApi: AuthprovidersApi,
    /**
     * The AuthrolesApi service constructor.
     * @property {module:api/AuthrolesApi}
     */
    AuthrolesApi: AuthrolesApi,
    /**
     * The CurrentuserApi service constructor.
     * @property {module:api/CurrentuserApi}
     */
    CurrentuserApi: CurrentuserApi,
    /**
     * The FilesApi service constructor.
     * @property {module:api/FilesApi}
     */
    FilesApi: FilesApi,
    /**
     * The FileversionsApi service constructor.
     * @property {module:api/FileversionsApi}
     */
    FileversionsApi: FileversionsApi,
    /**
     * The FoldersApi service constructor.
     * @property {module:api/FoldersApi}
     */
    FoldersApi: FoldersApi,
    /**
     * The MetaApi service constructor.
     * @property {module:api/MetaApi}
     */
    MetaApi: MetaApi,
    /**
     * The ProjectrolesApi service constructor.
     * @property {module:api/ProjectrolesApi}
     */
    ProjectrolesApi: ProjectrolesApi,
    /**
     * The ProjectsApi service constructor.
     * @property {module:api/ProjectsApi}
     */
    ProjectsApi: ProjectsApi,
    /**
     * The ProjecttransfersApi service constructor.
     * @property {module:api/ProjecttransfersApi}
     */
    ProjecttransfersApi: ProjecttransfersApi,
    /**
     * The RelationsApi service constructor.
     * @property {module:api/RelationsApi}
     */
    RelationsApi: RelationsApi,
    /**
     * The SearchApi service constructor.
     * @property {module:api/SearchApi}
     */
    SearchApi: SearchApi,
    /**
     * The SoftwareagentsApi service constructor.
     * @property {module:api/SoftwareagentsApi}
     */
    SoftwareagentsApi: SoftwareagentsApi,
    /**
     * The StorageprovidersApi service constructor.
     * @property {module:api/StorageprovidersApi}
     */
    StorageprovidersApi: StorageprovidersApi,
    /**
     * The SystemApi service constructor.
     * @property {module:api/SystemApi}
     */
    SystemApi: SystemApi,
    /**
     * The TagsApi service constructor.
     * @property {module:api/TagsApi}
     */
    TagsApi: TagsApi,
    /**
     * The TemplatepropertiesApi service constructor.
     * @property {module:api/TemplatepropertiesApi}
     */
    TemplatepropertiesApi: TemplatepropertiesApi,
    /**
     * The TemplatesApi service constructor.
     * @property {module:api/TemplatesApi}
     */
    TemplatesApi: TemplatesApi,
    /**
     * The UploadsApi service constructor.
     * @property {module:api/UploadsApi}
     */
    UploadsApi: UploadsApi,
    /**
     * The UserApi service constructor.
     * @property {module:api/UserApi}
     */
    UserApi: UserApi,
    /**
     * The UsersApi service constructor.
     * @property {module:api/UsersApi}
     */
    UsersApi: UsersApi
  };

  return exports;
}));
